/*
Problem 2: Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

#include <iostream>

/*
    Returns true if number is even
*/
bool isEven(int number) {
    if ((number % 2) == 0) {
        return true;
    }
    return false;
}

int main() {
    int sum = 0;
    
    // starting fib terms
    int prevTerm = 0;
    int currentTerm = 1;
    int nextTerm = 2;
    
    while (currentTerm < 4000000) {
        //std::cout << currentTerm << std::endl; //print fib sequence
        
        // sum up even fib terms
        if (isEven(currentTerm)) {
            sum += currentTerm;
        }

        // update fib terms
        prevTerm = currentTerm;
        currentTerm = nextTerm;
        nextTerm = prevTerm + currentTerm;
    }
    
    std::cout << "Sum: " << sum << std::endl;
}